@{
    Layout = null;
}

@model JovemLogin;

<form asp-action="LoginJovem" style="display: flex; align-items: center; justify-content: center; margin-right: 35px; margin-top: 100px; font-family: Arial, Helvetica, sans-serif;">
    <div style="background-color: #fff; display:flex; flex-direction: column; text-align: center;border:2px solid black; padding: 20px; align-items: center; justify-content: center; border-radius: 8px; width: 50vw; height:300px; position: relative; box-shadow: -6px 8px 4px rgba(0, 0, 0, 1)">
        
        <h1>Login</h1>
        <h2> Insira seus dados para continuar</h2>

        <lable>Insira seu email:</lable>
        <input asp-for="Email" class="input" placeholder="Email" type="text">
        <span class="text-danger">@Html.ValidationMessageFor(model => model.Email)</span>

        <lable>Insira sua senha:</lable>
        <input asp-for="Senha" class="input" placeholder="Senha" type="password">
        <span class="text-danger">@Html.ValidationMessageFor(model => model.Senha)</span>

        @if(ViewData.ModelState.ContainsKey("userIncorreto"))
        {
            @Html.ValidationMessage("userIncorreto");
        }
        

        <button asp-action="LoginJovem" class="button-confirm">Login</button>
    </div>
</form>

